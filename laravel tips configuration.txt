APP_NAME=project_name
APP_ENV=local
APP_KEY=base64:JRorlfaTdd4C1EkbnIPCFUFphZQsRbLYfZcWnhKvnRk=
APP_DEBUG=true
APP_TIMEZONE=UTC
APP_URL=http://localhost

APP_LOCALE=en
APP_FALLBACK_LOCALE=en
APP_FAKER_LOCALE=en_US

APP_MAINTENANCE_DRIVER=file
APP_MAINTENANCE_STORE=database

BCRYPT_ROUNDS=12

LOG_CHANNEL=stack
LOG_STACK=single
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=project_name
DB_USERNAME=root
DB_PASSWORD=

SESSION_DRIVER=database
SESSION_LIFETIME=120
SESSION_ENCRYPT=false
SESSION_PATH=/
SESSION_DOMAIN=null

BROADCAST_CONNECTION=log
FILESYSTEM_DISK=local
QUEUE_CONNECTION=database

CACHE_STORE=database
CACHE_PREFIX=

MEMCACHED_HOST=127.0.0.1

REDIS_CLIENT=phpredis
REDIS_HOST=127.0.0.1
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=log
MAIL_HOST=127.0.0.1
MAIL_PORT=2525
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="${APP_NAME}"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

VITE_APP_NAME="${APP_NAME}"
composer create-project laravel/laravel login-website
php artisan --version

// php artisan make:migration create_employee_table

// php artisan make:migration create_room_table

// php artisan make:migration create_transaction_table

// php artisan make:migration create_service_table

// php artisan make:migration create_testimonial_table

// php artisan make:migration create_service_transaction_table


php artisan migrate
php artisan make:controller UserController --resource

"resource' function = get, put, post

php artisan make:model User


php artisan serve


// hotdog chessdog dont search francis baliw
use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('users', function (Blueprint $table) {
            $table->uuid('id')->primary(); // Use UUID as the primary key
            $table->string('user_name');
            $table->string('password')->unique();
            $table->string('mobile')->nullable();
            $table->date('email');
            $table->enum('rule_id', ['value1', 'value2', 'value3']); // Use ENUM type for rule_id
            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('users');
    }
};

<1-- session -->

       Schema::create('sessions', function (Blueprint $table) {
            $table->string('id')->primary();
            $table->foreignId('user_id')->nullable()->index();
            $table->string('ip_address', 45)->nullable();
            $table->text('user_agent')->nullable();
            $table->longText('payload');
            $table->integer('last_activity')->index();
        


composer create-project --prefer-dist laravel/laravel REST_API
composer require laravel/passport

php artisan passport:install

php artisan make:model Product -m
php artisan make:controller Api/ProductsController --api


<!-- My table content -->
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        // Users Tables
        Schema::create('employees', function (Blueprint $table) {
            $table->id('id')->primary(); 
            $table->string('user_name', 50);
            $table->string('password' ,50)->unique();
            $table->string('mobile' ,50)->nullable(); // to make them all varchar(50)
            $table->string('email' ,50);
            $table->enum('role_id', ['guest', 'scheduler', 'admin']); 
            $table->timestamps();
        });
        // Rooms table
        Schema::create('rooms', function (Blueprint $table) {
            $table->id('id')->primary(); 
            $table->string('room_name');
        });
        
        // Transaction table
        Schema::create('transactions', function (Blueprint $table) {
            $table->id('id')->primary(); 
            $table->unsignedBigInteger('employee_id');
            $table->foreign('employee_id')->references('id')->on('employees'); // this must a users but for now it is employees
            $table->unsignedBigInteger('room_id');
            $table->foreign('room_id')->references('id')->on('rooms');
            $table->datetime('rent_start');
            $table->datetime('rent_date');
            $table->timestamps();
            $table->float('price_total');
        });

        // Service tables
        Schema::create('services', function (Blueprint $table) {
            $table->id('id')->primary(); 
            $table->string('name', 50);
            $table->float('price'); 
        });


        

        // Our pivot table
        Schema::create('service_transactions', function (Blueprint $table) {
            $table->unsignedBigInteger('service_id');
            $table->foreign('service_id')->references('id')->on('services');
            $table->unsignedBigInteger('transaction_id');
            $table->foreign('transaction_id')->references('id')->on('transactions');
        });

        Schema::create('tertimonials', function (Blueprint $table) {
            $table->id('id')->primary(); 
            $table->string('feedback', 255);
            $table->integer('rating');
            $table->unsignedBigInteger('transaction_id');
            $table->foreign('transaction_id')->references('id')->on('transactions');
        });
        
        


    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('employee');
    }
};
